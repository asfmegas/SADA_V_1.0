/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import Auxiliar.Erros;
import Auxiliar.ValidaCampos;
import DAO.CursoDAO;
import DAO.DisciplinaDAO;
import Objetos.Curso;
import Objetos.Disciplina;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

/**
 *
 * @author asfmegas
 */
public class DisciplinaGUI extends javax.swing.JFrame {
    private int idCurso;
    private int idDisciplina;
    private DefaultTableModel tmDisciplina = new DefaultTableModel(null,new String[]{"ID","DISCIPLINA","CARGA","CURSO"});
    private List<Disciplina> listaDisciplina;
    private ListSelectionModel lsmDisciplina;
    /**
     * Creates new form DisciplinaDUI
     */
    public DisciplinaGUI() {
        setTitle("DISCIPLINA - SADA V 1.0");
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        
        jtDisc.setDocument(new CustomDocument());
        jtNatureza.setDocument(new CustomDocument());
        jtObjetivo.setDocument(new CustomDocument());
        jtTabela.getTableHeader().setReorderingAllowed(false); 
        int x = 0;
        jtTabela.getColumnModel().getColumn(x++).setPreferredWidth(10);
        jtTabela.getColumnModel().getColumn(x++).setPreferredWidth(350);
        jtTabela.getColumnModel().getColumn(x++).setPreferredWidth(30);
        jtTabela.getColumnModel().getColumn(x++).setPreferredWidth(150);
        
        infor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabela = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtDisc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtNatureza = new javax.swing.JTextField();
        jtCarga = new javax.swing.JTextField();
        jtObjetivo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtObservacao = new javax.swing.JTextArea();
        jbConsulta = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jcCursos = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jbNovo = new javax.swing.JButton();
        jbCadastro = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbFechar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtTabela.setModel(tmDisciplina);
        jtTabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmDisciplina = jtTabela.getSelectionModel();
        lsmDisciplina.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    selecionarLinhaTabela(jtTabela);
                }
            }
        });
        jScrollPane1.setViewportView(jtTabela);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("DISCIPLINA:");

        jtDisc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtDisc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtDiscFocusGained(evt);
            }
        });
        jtDisc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtDiscActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("NATUREZA:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("CARGA HORÁRIA:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("OBJETIVO:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("OBSERVAÇÃO:");

        jtNatureza.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtNatureza.setEnabled(false);
        jtNatureza.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNaturezaFocusLost(evt);
            }
        });

        jtCarga.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtCarga.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtCarga.setEnabled(false);
        jtCarga.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtCargaFocusLost(evt);
            }
        });

        jtObjetivo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtObjetivo.setEnabled(false);
        jtObjetivo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtObjetivoFocusLost(evt);
            }
        });

        jtObservacao.setColumns(20);
        jtObservacao.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jtObservacao.setRows(5);
        jtObservacao.setEnabled(false);
        jtObservacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtObservacaoFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(jtObservacao);

        jbConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/pesquisa-sada.png"))); // NOI18N
        jbConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConsultaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("CURSO:");

        jcCursos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jcCursos.setEnabled(false);
        jcCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcCursosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jtCarga, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jcCursos, 0, 503, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtNatureza)
                                .addComponent(jtDisc))
                            .addGap(18, 18, 18)
                            .addComponent(jbConsulta))
                        .addComponent(jtObjetivo))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jtDisc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jtNatureza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jtCarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(jcCursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4))
                    .addComponent(jtObjetivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbNovo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbNovo.setForeground(new java.awt.Color(0, 0, 204));
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/novo-sada.gif"))); // NOI18N
        jbNovo.setText("NOVO");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbCadastro.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbCadastro.setForeground(new java.awt.Color(0, 0, 204));
        jbCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/salvar-sada.png"))); // NOI18N
        jbCadastro.setText("CADASTRAR");
        jbCadastro.setEnabled(false);
        jbCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastroActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbAlterar.setForeground(new java.awt.Color(0, 0, 204));
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/alterar-sada.png"))); // NOI18N
        jbAlterar.setText("ALTERAR");
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbExcluir.setForeground(new java.awt.Color(0, 0, 204));
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/excluir-sada.png"))); // NOI18N
        jbExcluir.setText("EXCLUIR");
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbFechar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbFechar.setForeground(new java.awt.Color(0, 0, 204));
        jbFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/fechar-sada.png"))); // NOI18N
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCadastro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbExcluir)
                .addGap(69, 69, 69)
                .addComponent(jbFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbAlterar, jbCadastro, jbExcluir, jbNovo});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbFechar)
                    .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbCadastro)
                        .addComponent(jbAlterar)
                        .addComponent(jbExcluir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jbAlterar, jbCadastro, jbExcluir, jbFechar, jbNovo});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 821, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        
        if(confirmarSalvarDados()){
            int resp = JOptionPane.showConfirmDialog(this, "Deseja excluir os dados da disciplina?\n"
                + "Se a disciplina for excluida os mivimentos relacionados a ela\ntambém serão apagados.","Confirmação",JOptionPane.YES_NO_OPTION);
            if(resp == JOptionPane.YES_NO_OPTION){
                excluirDisc();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Não há disciplina a ser excluida.");
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        Principal gui = new Principal();
        gui.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jbFecharActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        ativarComponentes(0);
        removerIntens();
        carregarCursos();
        limparCampos(1);
        jbConsulta.setEnabled(false);
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jcCursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcCursosActionPerformed
        //removerIntens();
        //carregarCursos();
    }//GEN-LAST:event_jcCursosActionPerformed

    private void jbCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastroActionPerformed
        if(confirmarSalvarDados()){
            salvarDisciplina();
        }else{
            JOptionPane.showMessageDialog(null, "Os campos DISCIPLINA, CARGA HORÁRIA E NATUREZA\nprecisam ser preenchidos.");
        }
    }//GEN-LAST:event_jbCadastroActionPerformed

    private void jtDiscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtDiscActionPerformed
        try {
            listarDisciplina();
        } catch (SQLException ex) {
            Erros.erroSql("Erro ao listar discipliva\n"+ex.getMessage());
        }
    }//GEN-LAST:event_jtDiscActionPerformed

    private void jbConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConsultaActionPerformed
        try {
            listarDisciplina();
        } catch (SQLException ex) {
            Erros.erroSql("Erro ao listar discipliva\n"+ex.getMessage());
        }
    }//GEN-LAST:event_jbConsultaActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        if(confirmarSalvarDados()){
            alterarDisc();
        }else{
            JOptionPane.showMessageDialog(null, "Não há dados a serem alterados.\nSelecione uma disciplina.");
        }
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jtDiscFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtDiscFocusGained
        ValidaCampos vc = new ValidaCampos();
        if(vc.validar(100, jtDisc.getText()) == false){
            jtDisc.requestFocus();
        }
    }//GEN-LAST:event_jtDiscFocusGained

    private void jtNaturezaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNaturezaFocusLost
        ValidaCampos vc = new ValidaCampos();
        if(vc.validar(100, jtNatureza.getText()) == false){
            jtNatureza.requestFocus();
        }
    }//GEN-LAST:event_jtNaturezaFocusLost

    private void jtObjetivoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtObjetivoFocusLost
        ValidaCampos vc = new ValidaCampos();
        if(vc.validar(150, jtObjetivo.getText()) == false){
            jtObjetivo.requestFocus();
        }
    }//GEN-LAST:event_jtObjetivoFocusLost

    private void jtObservacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtObservacaoFocusLost
        ValidaCampos vc = new ValidaCampos();
        if(vc.validar(250, jtObservacao.getText()) == false){
            jtObservacao.requestFocus();
        }
    }//GEN-LAST:event_jtObservacaoFocusLost

    private void jtCargaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCargaFocusLost
        ValidaCampos vc = new ValidaCampos();
        if(!vc.validar(4, jtCarga.getText())){
            jtCarga.requestFocus();
        }else{
            if(vc.validarNumerosInteiros(jtCarga.getText()) == false){
                jtCarga.requestFocus();
                jtCarga.selectAll();
            }
        }
    }//GEN-LAST:event_jtCargaFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisciplinaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisciplinaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisciplinaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisciplinaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new DisciplinaGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCadastro;
    private javax.swing.JButton jbConsulta;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFechar;
    private javax.swing.JButton jbNovo;
    private javax.swing.JComboBox jcCursos;
    private javax.swing.JTextField jtCarga;
    private javax.swing.JTextField jtDisc;
    private javax.swing.JTextField jtNatureza;
    private javax.swing.JTextField jtObjetivo;
    private javax.swing.JTextArea jtObservacao;
    private javax.swing.JTable jtTabela;
    // End of variables declaration//GEN-END:variables
    
    //Classe para manter caixa alta no JTextField
    //Referência
    //http://www.guj.com.br/java/199701-jtextfield-com-caixa-altaresolvido
    //Acessado em 21-09-2014
    public class CustomDocument extends PlainDocument {

        @Override
	public void insertString(int offset, String str, AttributeSet attr)
			throws BadLocationException {
		if (str == null)
			return;
		super.insertString(offset, str.toUpperCase(), attr); // Detalhe no str
	}
    }

    private void ativarComponentes(int v) {
        if (v == 1)
            jtDisc.setText("");
        jtDisc.requestFocus();
        jtCarga.setEnabled(true);
        jtNatureza.setEnabled(true);
        jtObjetivo.setEnabled(true);
        jtObservacao.setEnabled(true);
        jbAlterar.setEnabled(true);
        jbCadastro.setEnabled(true);
        jbExcluir.setEnabled(true);
        jcCursos.setEnabled(true);
    }
    
    private void limparCampos(int v){
        if(v == 1)
            jtDisc.setText("");
        jtDisc.requestFocus();
        jtNatureza.setText("");
        jtObjetivo.setText("");
        jtObservacao.setText("");
        jtCarga.setText("");
    }
    
    /**
     * Este método carrega os dados do campo "especificacao" do banco de dados curso para
     * dentro do jComboBox jcCurso
     */
    private void carregarCursos(){
        CursoDAO dao = new CursoDAO();
        Curso curso = new Curso();
        jcCursos.removeAllItems();
        jcCursos.addItem("");
        for(Curso lista: dao.pesquisar(curso)){
            jcCursos.addItem(lista.getCurso());
        }
    }
    
    /**
     * O método captura o id do curso selecionado e retorna esse valor
     * @return int
     */
    private int getIdCurso(){
        CursoDAO dao = new CursoDAO();
        Curso curso = new Curso();
        
        for (Curso lista : dao.pesquisar(curso)) {
            if(lista.getCurso().equals(jcCursos.getSelectedItem())){
                idCurso = lista.getId();
            }
        }
        return idCurso;
    }
    
    private void salvarDisciplina(){
        Disciplina disc = new Disciplina();
        DisciplinaDAO dao = new DisciplinaDAO();
        
        int id = (int) (Math.random() * 1000000);
        disc.setIdDisc(id);
        disc.setNome(jtDisc.getText());
        disc.setNatureza(jtNatureza.getText());
        disc.setObjetivo(jtObjetivo.getText());
        disc.setCarga(Integer.parseInt(jtCarga.getText()));
        disc.setObservacao(jtObservacao.getText());
        

        dao.salvar(disc, getIdCurso());
        limparCampos(1);
        carregarCursos();
    }
    
    private void listarDisciplina() throws SQLException{
        DisciplinaDAO dao = new DisciplinaDAO();
        listaDisciplina = dao.pesquisarDisc("%"+jtDisc.getText()+"%");
        moastrarPesquisa(listaDisciplina);
    }

    private void moastrarPesquisa(List<Disciplina> disc) {
        while(tmDisciplina.getRowCount() > 0){
            tmDisciplina.removeRow(0);
        }
        if(disc.isEmpty()){
            JOptionPane.showMessageDialog(null, "Sua lista está vazia!");
        }else{
            String[] linhas = new String[]{null,null,null,null};
            for(int i=0; i < disc.size();i++){
                tmDisciplina.addRow(linhas);
                tmDisciplina.setValueAt(disc.get(i).getIdDisc(), i, 0);
                tmDisciplina.setValueAt(disc.get(i).getNome(), i, 1);
                tmDisciplina.setValueAt(disc.get(i).getCarga(), i, 2);
                tmDisciplina.setValueAt(disc.get(i).getCurso(), i, 3);
            }
        }
    }
    
    private void selecionarLinhaTabela(JTable tabela){
        if(jtTabela.getSelectedRow() != -1){
            ativarComponentes(1);
            removerIntens();
            getIdCurso();
            jtDisc.setText(""+listaDisciplina.get(tabela.getSelectedRow()).getNome());
            jtNatureza.setText(listaDisciplina.get(tabela.getSelectedRow()).getNatureza());
            jtObjetivo.setText(listaDisciplina.get(tabela.getSelectedRow()).getObjetivo());
            jtCarga.setText(""+listaDisciplina.get(tabela.getSelectedRow()).getCarga());
            jcCursos.addItem(listaDisciplina.get(tabela.getSelectedRow()).getCurso());
            jtObservacao.setText(listaDisciplina.get(tabela.getSelectedRow()).getObservacao());
            idDisciplina = listaDisciplina.get(tabela.getSelectedRow()).getIdDisc();
        }else{
            removerIntens();
            jtDisc.setText("");
            jtNatureza.setText("");
            jtObjetivo.setText("");
            jtCarga.setText("");
            jcCursos.addItem("");
            jtObservacao.setText("");
        }
    }
    
    /**
     * http://stackoverflow.com/questions/12249336/removing-all-items-from-a-combo-box-in-java
     * Removing all Items from a combo box in Java
     * Acessado em 21-09-2014
     */
    private void removerIntens(){
        int itemCount = jcCursos.getItemCount();
        for(int i=0; i < itemCount; i++){
            jcCursos.removeItemAt(i);
        }
    }
    
    private void alterarDisc(){
        Disciplina disc = new Disciplina();
        DisciplinaDAO dao = new DisciplinaDAO();
        disc.setId(getIdCurso());
        System.out.println(getIdCurso());
        disc.setIdDisc(idDisciplina);
        disc.setNome(jtDisc.getText());
        disc.setNatureza(jtNatureza.getText());
        disc.setObjetivo(jtObjetivo.getText());
        disc.setCarga(Integer.parseInt(jtCarga.getText()));
        disc.setObservacao(jtObservacao.getText());
        dao.alterar(disc);
        limparCampos(1);
        try {
            listarDisciplina();
        } catch (SQLException ex) {
            Erros.erroSql("Erro ao listar dados\n"+ex.getMessage());
        }
    }
    
    private void excluirDisc(){
        DisciplinaDAO dao = new DisciplinaDAO();
        dao.excluir(idDisciplina);
        limparCampos(1);
        try {
            listarDisciplina();
        } catch (SQLException ex) {
            Erros.erroSql("Erro ao listar disciplina\n"+ex.getMessage());
        }
    }
    
    private void infor(){
        jbAlterar.setToolTipText("Alterar dados.");
        jbCadastro.setToolTipText("Cadastrar dados.");
        jbExcluir.setToolTipText("Excluir dados.");
        jbNovo.setToolTipText("Novo cadastro.");
    }
    
    private boolean confirmarSalvarDados(){
        if(!jtDisc.getText().equals("") && !jtCarga.getText().equals("") && !jtNatureza.getText().equals("") && !jcCursos.getSelectedItem().toString().equals("")){
            return true;
        }else{
            return false;
        }
    }
}
