/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import Auxiliar.Erros;
import Auxiliar.ValidaCampos;
import DAO.AlunoDAO;
import Objetos.Aluno;
import Objetos.Telefone;
import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

/**
 *
 * @author asfmegas
 */
public class AlunoGUI extends javax.swing.JFrame {
    private int idAluno,idFone;
    private DefaultTableModel tmAluno = new DefaultTableModel(null, new String[]{"NOME","NASCIMENTO"});
    private List<Aluno> listaAluno;
    private ListSelectionModel lsmAluno;
    private SimpleDateFormat data = new SimpleDateFormat("yyyy-MM-dd");
    private Date hoje = new Date();
    /**
     * Creates new form AlunoGUI
     */
    public AlunoGUI() {
        setTitle("CADASTRO DE ALUNO - SADA V 1.0");
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        
        jtNome.setDocument(new CustomDocument());
        jtRua.setDocument(new CustomDocument());
        jtBairro.setDocument(new CustomDocument());
        jtCidade.setDocument(new CustomDocument());
        jtOper1.setDocument(new CustomDocument());
        jtOper2.setDocument(new CustomDocument());
        jbConsulta.setVerticalTextPosition(SwingConstants.CENTER); 
        jbConsulta.setHorizontalTextPosition(SwingConstants.CENTER);
        
        jtTabela.getTableHeader().setReorderingAllowed(false); 
        int x = 0;
        jtTabela.getColumnModel().getColumn(x++).setPreferredWidth(600);
        jtTabela.getColumnModel().getColumn(x++).setPreferredWidth(40);
        
        infor();

        
        //listarEstado("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jbNovo = new javax.swing.JButton();
        jbCadastro = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbFechar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jfNasc = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jtRua = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jfCep = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jtBairro = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtCidade = new javax.swing.JTextField();
        jcEstado = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jbConsulta = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jtNumero = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jfDDD1 = new javax.swing.JFormattedTextField();
        jfFone1 = new javax.swing.JFormattedTextField();
        jcTipo1 = new javax.swing.JComboBox();
        jfDDD2 = new javax.swing.JFormattedTextField();
        jfFone2 = new javax.swing.JFormattedTextField();
        jcTipo2 = new javax.swing.JComboBox();
        jtOper1 = new javax.swing.JTextField();
        jtOper2 = new javax.swing.JTextField();
        jtNome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabela = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(51, 51, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbNovo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbNovo.setForeground(new java.awt.Color(0, 0, 204));
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/novo-sada.gif"))); // NOI18N
        jbNovo.setText("NOVO");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbCadastro.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbCadastro.setForeground(new java.awt.Color(0, 0, 204));
        jbCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/salvar-sada.png"))); // NOI18N
        jbCadastro.setText("CADASTRAR");
        jbCadastro.setEnabled(false);
        jbCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastroActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbAlterar.setForeground(new java.awt.Color(0, 0, 204));
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/alterar-sada.png"))); // NOI18N
        jbAlterar.setText("ALTERAR");
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbExcluir.setForeground(new java.awt.Color(0, 0, 204));
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/excluir-sada.png"))); // NOI18N
        jbExcluir.setText("EXCLUIR");
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbFechar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbFechar.setForeground(new java.awt.Color(0, 0, 204));
        jbFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/fechar-sada.png"))); // NOI18N
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCadastro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbAlterar, jbCadastro, jbExcluir, jbNovo});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbFechar)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbCadastro)
                        .addComponent(jbAlterar)
                        .addComponent(jbExcluir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jbAlterar, jbCadastro, jbExcluir, jbFechar, jbNovo});

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("NOME:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("NASCIMENTO:");

        try {
            jfNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfNasc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jfNasc.setText("01011991");
        jfNasc.setEnabled(false);
        jfNasc.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jfNasc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jfNascFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jfNascFocusLost(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("RUA:");

        jtRua.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtRua.setEnabled(false);
        jtRua.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtRuaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtRuaFocusLost(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("CEP.:");

        try {
            jfCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfCep.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jfCep.setText("60000000");
        jfCep.setEnabled(false);
        jfCep.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jfCep.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jfCepFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jfCepFocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("BAIRRO:");

        jtBairro.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtBairro.setEnabled(false);
        jtBairro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtBairroFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtBairroFocusLost(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("CIDADE:");

        jtCidade.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtCidade.setEnabled(false);
        jtCidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtCidadeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtCidadeFocusLost(evt);
            }
        });

        jcEstado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jcEstado.setBorder(null);
        jcEstado.setEnabled(false);
        jcEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcEstadoItemStateChanged(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("UF.:");

        jbConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/pesquisa-sada.png"))); // NOI18N
        jbConsulta.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbConsulta.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConsultaActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Nº.:");

        jtNumero.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtNumero.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtNumero.setEnabled(false);
        jtNumero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtNumeroFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNumeroFocusLost(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Telefone", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.ABOVE_TOP));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("DDD");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("NÚMERO");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("TIPO");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("OPERADORA");

        try {
            jfDDD1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfDDD1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jfDDD1.setEnabled(false);
        jfDDD1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jfDDD1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jfDDD1FocusGained(evt);
            }
        });

        try {
            jfFone1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfFone1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jfFone1.setEnabled(false);
        jfFone1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jfFone1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jfFone1FocusGained(evt);
            }
        });

        jcTipo1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jcTipo1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MOVEL", "FIXO" }));
        jcTipo1.setEnabled(false);
        jcTipo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcTipo1ActionPerformed(evt);
            }
        });

        try {
            jfDDD2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfDDD2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jfDDD2.setEnabled(false);
        jfDDD2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jfDDD2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jfDDD2FocusGained(evt);
            }
        });

        try {
            jfFone2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfFone2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jfFone2.setEnabled(false);
        jfFone2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jfFone2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jfFone2FocusGained(evt);
            }
        });

        jcTipo2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jcTipo2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MOVEL", "FIXO" }));
        jcTipo2.setEnabled(false);

        jtOper1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtOper1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtOper1.setEnabled(false);
        jtOper1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtOper1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtOper1FocusLost(evt);
            }
        });

        jtOper2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtOper2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtOper2.setEnabled(false);
        jtOper2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtOper2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtOper2FocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jfDDD2)
                        .addGap(18, 18, 18)
                        .addComponent(jfFone2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jfDDD1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jfFone1)
                                .addGap(22, 22, 22)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jcTipo2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jcTipo1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13)
                    .addComponent(jtOper1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(jtOper2))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jfFone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jcTipo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtOper1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jfDDD1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfDDD2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jfFone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcTipo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtOper2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtNome.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNomeFocusLost(evt);
            }
        });
        jtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jfCep, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 217, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jtBairro, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jtRua, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jfNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jfNasc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jbConsulta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jfCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtTabela.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtTabela.setModel(tmAluno);
        jtTabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmAluno = jtTabela.getSelectionModel();
        lsmAluno.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    selecionarLinhaTabela(jtTabela);
                }
            }
        });
        jScrollPane1.setViewportView(jtTabela);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        
        if(confirmarSalvarDados()){
            int resp = JOptionPane.showConfirmDialog(this, "Deseja excluir os dados do aluno?\n"
                + "Se o aluno for excluir seu(s) movimento(s) também será(ão) apagado(s).","Confirmação",JOptionPane.YES_NO_OPTION);
            if(resp == JOptionPane.YES_NO_OPTION){
                excluirAluno();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Não há aluno a ser excluido.\nSelecione um aluno.");
        }
        
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        Principal gui = new Principal();
        gui.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jbFecharActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        ativarComponentes();
        listarEstado("");
        limparCampos();
        //jbConsulta.setEnabled(false);
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastroActionPerformed
        if(confirmarSalvarDados()){
            salvarAluno();
            limparCampos();
            listarEstado("");
        }else{
            JOptionPane.showMessageDialog(null, "Os campos NOME, DATA E TELEFONE 1 precisam ser preenchidos.");
        }
    }//GEN-LAST:event_jbCadastroActionPerformed

    private void jbConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConsultaActionPerformed
        try {
            listarAluno();
        } catch (SQLException ex) {
            Erros.erroSql("Erro ao lista dados\n"+ex.getMessage());
        }
    }//GEN-LAST:event_jbConsultaActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        if(confirmarSalvarDados()){
            AlunoDAO dao = new AlunoDAO();
            List<Aluno> lista = new ArrayList<>();
            
            lista = dao.pesquisarFone(idAluno);
            int x = -1;
            
            for(Aluno a : lista){
                x++;
                System.out.println("valor de x: "+x);
            }

            System.out.println("idFone: "+lista.get(x).getIdFone());
            if(x == 0){
                alterarAluno2();
            }else{
                alterarAluno();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Não há dados a serem alterados.\nSelecione um aluno.");
        }
        
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jcEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcEstadoItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            
        }
    }//GEN-LAST:event_jcEstadoItemStateChanged

    private void jfDDD1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfDDD1FocusGained
        jfDDD1.selectAll();
    }//GEN-LAST:event_jfDDD1FocusGained

    private void jfDDD2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfDDD2FocusGained
        jfDDD2.selectAll();
    }//GEN-LAST:event_jfDDD2FocusGained

    private void jfNascFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfNascFocusGained
        jfNasc.selectAll();
    }//GEN-LAST:event_jfNascFocusGained

    private void jtNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNomeFocusGained
        jtNome.selectAll();
    }//GEN-LAST:event_jtNomeFocusGained

    private void jtRuaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtRuaFocusGained
        jtRua.selectAll();
    }//GEN-LAST:event_jtRuaFocusGained

    private void jfCepFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfCepFocusGained
        jfCep.selectAll();
    }//GEN-LAST:event_jfCepFocusGained

    private void jtBairroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtBairroFocusGained
        jtBairro.selectAll();
    }//GEN-LAST:event_jtBairroFocusGained

    private void jtCidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCidadeFocusGained
        jtCidade.selectAll();
    }//GEN-LAST:event_jtCidadeFocusGained

    private void jfFone1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfFone1FocusGained
        jfFone1.selectAll();
    }//GEN-LAST:event_jfFone1FocusGained

    private void jfFone2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfFone2FocusGained
        jfFone2.selectAll();
    }//GEN-LAST:event_jfFone2FocusGained

    private void jtNumeroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNumeroFocusGained
        jtNumero.selectAll();
    }//GEN-LAST:event_jtNumeroFocusGained

    private void jtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNomeActionPerformed
        try {
            listarAluno();
        } catch (SQLException ex) {
            Erros.erroSql("Erro ao lista dados\n"+ex.getMessage());
        }
    }//GEN-LAST:event_jtNomeActionPerformed

    private void jcTipo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcTipo1ActionPerformed
        //System.out.println("tipo1 selecionado: "+getTipo1());
        //System.out.println("tipo2 selecionado: "+getTipo2());
    }//GEN-LAST:event_jcTipo1ActionPerformed

    private void jtOper1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtOper1FocusGained
        jtOper1.selectAll();
    }//GEN-LAST:event_jtOper1FocusGained

    private void jtOper2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtOper2FocusGained
        jtOper2.selectAll();
    }//GEN-LAST:event_jtOper2FocusGained

    private void jtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNomeFocusLost
        ValidaCampos vc = new ValidaCampos();
        if(vc.validar(150, jtNome.getText()) == false){
            jtNome.requestFocus();
        }
    }//GEN-LAST:event_jtNomeFocusLost

    private void jtRuaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtRuaFocusLost
        ValidaCampos vc = new ValidaCampos();
        if(vc.validar(100, jtRua.getText()) == false){
            jtRua.requestFocus();
        }
    }//GEN-LAST:event_jtRuaFocusLost

    private void jtNumeroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNumeroFocusLost
        ValidaCampos vc = new ValidaCampos();
        if(vc.validar(4, jtNumero.getText()) == false){
            jtNumero.requestFocus();
        }
    }//GEN-LAST:event_jtNumeroFocusLost

    private void jtBairroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtBairroFocusLost
        ValidaCampos vc = new ValidaCampos();
        if(vc.validar(100, jtBairro.getText()) == false){
            jtBairro.requestFocus();
        }
    }//GEN-LAST:event_jtBairroFocusLost

    private void jtCidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCidadeFocusLost
        ValidaCampos vc = new ValidaCampos();
        if(vc.validar(50, jtCidade.getText()) == false){
            jtCidade.requestFocus();
        }
    }//GEN-LAST:event_jtCidadeFocusLost

    private void jtOper1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtOper1FocusLost
        ValidaCampos vc = new ValidaCampos();
        if(vc.validar(20, jtOper1.getText()) == false){
            jtOper1.requestFocus();
        }
    }//GEN-LAST:event_jtOper1FocusLost

    private void jtOper2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtOper2FocusLost
        ValidaCampos vc = new ValidaCampos();
        if(vc.validar(20, jtOper2.getText()) == false){
            jtOper2.requestFocus();
        }
    }//GEN-LAST:event_jtOper2FocusLost

    private void jfCepFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfCepFocusLost
        if(!validarCamposPreenchidos(jfCep.getText())){
            jfCep.setText("60000000");
        }
    }//GEN-LAST:event_jfCepFocusLost

    private void jfNascFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfNascFocusLost
        if(!validarCamposPreenchidos(jfNasc.getText())){
            jfNasc.setText("01011991");
        }
    }//GEN-LAST:event_jfNascFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlunoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlunoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlunoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlunoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlunoGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCadastro;
    private javax.swing.JButton jbConsulta;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFechar;
    private javax.swing.JButton jbNovo;
    private javax.swing.JComboBox jcEstado;
    private javax.swing.JComboBox jcTipo1;
    private javax.swing.JComboBox jcTipo2;
    private javax.swing.JFormattedTextField jfCep;
    private javax.swing.JFormattedTextField jfDDD1;
    private javax.swing.JFormattedTextField jfDDD2;
    private javax.swing.JFormattedTextField jfFone1;
    private javax.swing.JFormattedTextField jfFone2;
    private javax.swing.JFormattedTextField jfNasc;
    private javax.swing.JTextField jtBairro;
    private javax.swing.JTextField jtCidade;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextField jtNumero;
    private javax.swing.JTextField jtOper1;
    private javax.swing.JTextField jtOper2;
    private javax.swing.JTextField jtRua;
    private javax.swing.JTable jtTabela;
    // End of variables declaration//GEN-END:variables
    //Classe para manter caixa alta no JTextField
    //Referência
    //http://www.guj.com.br/java/199701-jtextfield-com-caixa-altaresolvido
    public class CustomDocument extends PlainDocument {

        @Override
	public void insertString(int offset, String str, AttributeSet attr)
			throws BadLocationException {
		if (str == null)
			return;
		super.insertString(offset, str.toUpperCase(), attr); // Detalhe no str
	}
    }
    
    public void ativarComponentes(){
        //jtNome.setText("");
        jtNome.requestFocus();
        jtRua.setEnabled(true);
        jtBairro.setEnabled(true);
        jtCidade.setEnabled(true);
        jcEstado.setEnabled(true);
        jtNumero.setEnabled(true);
        jfNasc.setEnabled(true);
        jfCep.setEnabled(true);
        jbAlterar.setEnabled(true);
        jbCadastro.setEnabled(true);
        jbExcluir.setEnabled(true);
        jfDDD1.setEnabled(true);
        jfDDD2.setEnabled(true);
        jfFone1.setEnabled(true);
        jfFone2.setEnabled(true);
        jtOper1.setEnabled(true);
        jtOper2.setEnabled(true);
        jcTipo1.setEnabled(true);
        jcTipo2.setEnabled(true);
        limparCampos();
    }
    
    private void limparCampos(){    
        jtNome.setText("");
        jtBairro.setText("");
        jtCidade.setText("");
        jtNumero.setText("");
        jtRua.setText("");
        jfCep.setText("60000000");
        jfNasc.setText("");
        jfDDD1.setText("");
        jfDDD2.setText("");
        jfFone1.setText("");
        jfFone2.setText("");
        jtOper1.setText("");
        jtOper2.setText("");
    }
    
    private void salvarAluno(){
        Aluno aluno = new Aluno();
        AlunoDAO dao = new AlunoDAO();
        
        int id = (int) (Math.random() * 10000000);
        aluno.setId(id);
        aluno.setNome(jtNome.getText());
        aluno.setData(formatarData(jfNasc.getText()));
        aluno.setRua(jtRua.getText());
        aluno.setNumero(jtNumero.getText());
        aluno.setBairro(jtBairro.getText());
        aluno.setCep(jfCep.getText());
        aluno.setCidade(jtCidade.getText());
        aluno.setUf(jcEstado.getSelectedItem().toString());
        //Telefone 1
        int idFone1 = (int) (Math.random() * 10000000);
        aluno.setIdFone(idFone1);
        aluno.setDdd(jfDDD1.getText());
        aluno.setFone(jfFone1.getText());
        aluno.setTipo(jcTipo1.getSelectedItem().toString());
        aluno.setOperadora(jtOper1.getText());
        //fone2
        Telefone fone2 = new Telefone();
        int idFone2 = (int) (Math.random() * 10000000);
        fone2.setIdFone(idFone2);
        fone2.setDdd(jfDDD2.getText());
        fone2.setFone(jfFone2.getText());
        fone2.setTipo(jcTipo2.getSelectedItem().toString());
        fone2.setOperadora(jtOper2.getText());
        
        if(validarCamposPreenchidos(jfFone2.getText())){
            dao.salvar(aluno, fone2);
        }else{
            dao.salvar(aluno);
        }
        listarTipo1("MOVEL");
        listarTipo2("MOVEL");
    }
    
    private void listarAluno() throws SQLException{
        AlunoDAO dao = new AlunoDAO();
        listaAluno = dao.pesquisar("%"+jtNome.getText()+"%");
        moastrarPesquisa(listaAluno);
    }

    private void moastrarPesquisa(List<Aluno> disc) {
        while(tmAluno.getRowCount() > 0){
            tmAluno.removeRow(0);
        }
        if(disc.isEmpty()){
            JOptionPane.showMessageDialog(null, "Sua lista está vazia!");
        }else{
            String[] linhas = new String[]{null,null};
            for(int i=0; i < disc.size();i++){
                tmAluno.addRow(linhas);
                tmAluno.setValueAt(disc.get(i).getNome(), i, 0);
                tmAluno.setValueAt(formatarDataCampo(disc.get(i).getData()), i, 1);
            }
        }
    }
    
    private void selecionarLinhaTabela(JTable tabela) {
        if (jtTabela.getSelectedRow() != -1) {
            ativarComponentes();
            jcEstado.addItem(listaAluno.get(tabela.getSelectedRow()).getUf());
            jtNome.setText(listaAluno.get(tabela.getSelectedRow()).getNome());
            jtBairro.setText(listaAluno.get(tabela.getSelectedRow()).getBairro());
            jtCidade.setText(listaAluno.get(tabela.getSelectedRow()).getCidade());
            jtRua.setText(listaAluno.get(tabela.getSelectedRow()).getRua());
            jtNumero.setText(listaAluno.get(tabela.getSelectedRow()).getNumero());
            jfCep.setText(listaAluno.get(tabela.getSelectedRow()).getCep());
            jfNasc.setText(formatarDataCampo(listaAluno.get(tabela.getSelectedRow()).getData()));
            idAluno = listaAluno.get(tabela.getSelectedRow()).getId();
            idFone = listaAluno.get(tabela.getSelectedRow()).getIdFone();
            listarEstado(listaAluno.get(tabela.getSelectedRow()).getUf());

            pesquisarTelefones();
        } else {
            jtNome.setText("");
            jtBairro.setText("");
            jtCidade.setText("");
            jtNumero.setText("");
            jtRua.setText("");
            jfCep.setText("60000000");
            jfNasc.setText("01011991");
            jfDDD1.setText("");
            jfDDD2.setText("");
            jfFone1.setText("");
            jfFone2.setText("");
            listarTipo1("MOVEL");
            listarTipo2("MOVEL");
            jtOper1.setText("");
            jtOper2.setText("");
        }
    }
    
    /**
     * http://stackoverflow.com/questions/12249336/removing-all-items-from-a-combo-box-in-java
     * Removing all Items from a combo box in Java
     * Acessado em 21-09-2014
     */
    private void removerIntens(){
        int itemCount = jcEstado.getItemCount();
        for(int i=0; i < itemCount; i++){
            jcEstado.removeItemAt(i);
        }
    }
    
    private void listarEstado(String item){
        jcEstado.removeAllItems();
        jcEstado.addItem(item);
        jcEstado.addItem("AC");
        jcEstado.addItem("AL");
        jcEstado.addItem("AP");
        jcEstado.addItem("AM");
        jcEstado.addItem("CE");
        jcEstado.addItem("DF");
        jcEstado.addItem("ES");
        jcEstado.addItem("GO");
        jcEstado.addItem("MA");
        jcEstado.addItem("MT");
        jcEstado.addItem("MS");
        jcEstado.addItem("MG");
        jcEstado.addItem("PA");
        jcEstado.addItem("PB");
        jcEstado.addItem("PR");
        jcEstado.addItem("PE");
        jcEstado.addItem("PI");
        jcEstado.addItem("RJ");
        jcEstado.addItem("RN");
        jcEstado.addItem("RS");
        jcEstado.addItem("RO");
        jcEstado.addItem("RR");
        jcEstado.addItem("SC");
        jcEstado.addItem("SP");
        jcEstado.addItem("SE");
        jcEstado.addItem("TO");
    }
    
    private void listarTipo1(String tipo){
        jcTipo1.removeAllItems();
        
        if(tipo.equalsIgnoreCase("FIXO")){
            System.out.println("entrando em fixo");
            jcTipo1.addItem("FIXO");
            jcTipo1.addItem("MOVEL");  
        }else if(tipo.equalsIgnoreCase("MOVEL")){
            System.out.println("entrando em movel");
            jcTipo1.addItem("MOVEL");
            jcTipo1.addItem("FIXO");
        }
    }
    
    private void listarTipo2(String tipo){
        jcTipo2.removeAllItems();
        if(tipo.equals("FIXO")){
            System.out.println("entrando em fixo2");
            jcTipo2.addItem("FIXO");
            jcTipo2.addItem("MOVEL");  
        }else if(tipo.equals("MOVEL")){
            System.out.println("entrando em movel2");
            jcTipo2.addItem("MOVEL");
            jcTipo2.addItem("FIXO");
        }
        
    }
    
    private void alterarAluno(){
        Aluno aluno = new Aluno();
        AlunoDAO dao = new AlunoDAO();
        
        aluno.setId(idAluno);
        aluno.setNome(jtNome.getText());
        aluno.setData(formatarData(jfNasc.getText()));
        aluno.setRua(jtRua.getText());
        aluno.setNumero(jtNumero.getText());
        aluno.setBairro(jtBairro.getText());
        aluno.setCep(jfCep.getText());
        aluno.setCidade(jtCidade.getText());
        aluno.setUf(jcEstado.getSelectedItem().toString());
        
        List<Aluno> lista = new ArrayList<>();
        lista = dao.pesquisarFone(idAluno);
        
        aluno.setIdFone(lista.get(0).getIdFone());
        aluno.setDdd(jfDDD1.getText());
        aluno.setFone(jfFone1.getText());
        aluno.setTipo(jcTipo1.getSelectedItem().toString());
        aluno.setOperadora(jtOper1.getText());
        
        aluno.setIdFone2(lista.get(1).getIdFone());
        aluno.setDdd2(jfDDD2.getText());
        aluno.setFone2(jfFone2.getText());
        aluno.setTipo2(jcTipo2.getSelectedItem().toString());
        aluno.setOperadora2(jtOper2.getText());
            
        dao.alterar(aluno);
        limparCampos();
        listarEstado("");
        listarTipo1("MOVEL");
        listarTipo2("MOVEL");
        try {
            listarAluno();
        } catch (SQLException ex) {
            Erros.erroSql("Erro ao tentar alterar aluno!\n"+ex.getMessage());
        }
    }
    
    private void alterarAluno2(){
        Aluno aluno = new Aluno();
        AlunoDAO dao = new AlunoDAO();
        
        aluno.setId(idAluno);
        aluno.setNome(jtNome.getText());
        aluno.setData(formatarData(jfNasc.getText()));
        aluno.setRua(jtRua.getText());
        aluno.setNumero(jtNumero.getText());
        aluno.setBairro(jtBairro.getText());
        aluno.setCep(jfCep.getText());
        aluno.setCidade(jtCidade.getText());
        aluno.setUf(jcEstado.getSelectedItem().toString());
        
        List<Aluno> lista = new ArrayList<>();
        lista = dao.pesquisarFone(idAluno);
        
        aluno.setIdFone(lista.get(0).getIdFone());
        aluno.setDdd(jfDDD1.getText());
        aluno.setFone(jfFone1.getText());
        aluno.setTipo(jcTipo1.getSelectedItem().toString());
        aluno.setOperadora(jtOper1.getText());
        
        Aluno fone = new Aluno();
        int idFone1 = (int) (Math.random() * 10000000);
        fone.setIdFone(idFone1);
        fone.setId(idAluno);
        fone.setDdd(jfDDD2.getText());
        fone.setFone(jfFone2.getText());
        fone.setTipo(jcTipo2.getSelectedItem().toString());
        fone.setOperadora(jtOper2.getText());
        
        dao.alterar(aluno);
        dao.salvarFone(fone);

        limparCampos();
        listarEstado("");
        listarTipo1("MOVEL");
        listarTipo2("MOVEL");
        try {
            listarAluno();
        } catch (SQLException ex) {
            Erros.erroSql("Erro ao tentar alterar aluno!\n"+ex.getMessage());
        }
    }
    
    private void excluirAluno(){
        AlunoDAO dao = new AlunoDAO();
        dao.excluir(idAluno);
        limparCampos();
        try {
            listarAluno();
        } catch (SQLException ex) {
            Erros.erroSql("Erro ao tentar excluir aluno!\n"+ex.getMessage());
        }
    }
    
    private void pesquisarTelefones(){
        AlunoDAO dao = new AlunoDAO();
        List<Aluno> aluno = new ArrayList<>();
        aluno = dao.pesquisarFone(idAluno);   
        
        if(aluno.size() > 1){
            jfDDD1.setText(aluno.get(0).getDdd());
            jfFone1.setText(aluno.get(0).getFone());
            jtOper1.setText(aluno.get(0).getOperadora());
            listarTipo1(aluno.get(0).getTipo());
            
            jfDDD2.setText(aluno.get(1).getDdd());
            jfFone2.setText(aluno.get(1).getFone());
            jtOper2.setText(aluno.get(1).getOperadora());
            listarTipo2(aluno.get(1).getTipo());
            
        }else{
            jfDDD1.setText(aluno.get(0).getDdd());
            jfFone1.setText(aluno.get(0).getFone());
            jtOper1.setText(aluno.get(0).getOperadora());
            listarTipo1(aluno.get(0).getTipo());
        }
    }
  
    /**
     * Formatação de campos data para a inserção no banco de dados
     * 25/09/2014
     * @param data
     * @return 
     */
    private String formatarData(String data){
        char[] num = new char[data.length()];
        for(int i=0; i < data.length(); i++){
            num[i] = data.charAt(i);
        }
        String dia = ""+num[0]+num[1];
        String mes = ""+num[3]+num[4];
        String ano = ""+num[6]+num[7]+num[8]+num[9];
        String d = ano+"-"+mes+"-"+dia;

        return d;
    }
    
    private String formatarDataCampo(String data){
        char[] num = new char[data.length()];
        for(int i=0; i < data.length(); i++){
            num[i] = data.charAt(i);
        }
        String dia = ""+num[8]+num[9];
        String mes = ""+num[5]+num[6];
        String ano = ""+num[0]+num[1]+num[2]+num[3];
        String d = dia+"/"+mes+"/"+ano;
            //1983-02-18
            //0 1 2 3 - 5 6 - 8 9      
        return d;
    }
    
    private void infor(){
        jbAlterar.setToolTipText("Alterar dados.");
        jbCadastro.setToolTipText("Cadastrar dados.");
        jbExcluir.setToolTipText("Excluir dados.");
        jbNovo.setToolTipText("Novo cadastro.");
    }
    
    private boolean confirmarSalvarDados(){
        if(!jtNome.getText().equals("") && !jfFone1.getText().equals("") && !jfNasc.getText().equals("")){
            return true;
        }else{
            return false;
        }
    }
    
    private boolean validarCamposPreenchidos(String texto){
        boolean n1 = texto.contains("1");
        boolean n2 = texto.contains("2");
        boolean n3 = texto.contains("3");
        boolean n4 = texto.contains("4");
        boolean n5 = texto.contains("5");
        boolean n6 = texto.contains("6");
        boolean n7 = texto.contains("7");
        boolean n8 = texto.contains("8");
        boolean n9 = texto.contains("9");
        boolean n10 = texto.contains("10");
        boolean n0 = texto.contains("0");
         
        if(n1 == true || n2 == true || n3 == true || n4 == true || n5 == true || n5 == true || n6 == true || n7 == true || n8 == true || n9 == true || n10 == true | n0 == true){
            return true;
        }else{
            return false;
        }
    }
}
